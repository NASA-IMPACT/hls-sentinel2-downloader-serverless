name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8.6
        uses: actions/setup-python@v2
        with:
          python-version: 3.8.6

      - name: Install Pipenv
        uses: dschep/install-pipenv-action@v1

      - name: Install dependencies
        run: |
          make install

      - name: Run linting
        run: |
          make lint

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8.6
        uses: actions/setup-python@v2
        with:
          python-version: 3.8.6

      - name: Install Pipenv
        uses: dschep/install-pipenv-action@v1

      - name: Install dependencies
        run: |
          make install

      - name: Create .env files for tests
        run: |
          cat <<EOF >> lambdas/link_fetcher/.env
          PG_PASSWORD="test-pass"
          PG_USER="test-user"
          PG_DB="test-db"
          EOF
          cat <<EOF >> layers/db/.env
          PG_PASSWORD="test-pass"
          PG_USER="test-user"
          PG_DB="test-db"
          EOF
          cat <<EOF >> alembic_mgration/.env
          PG_PASSWORD="test-pass"
          PG_USER="test-user"
          PG_DB="test-db"
          EOF


      - name: Run unit tests
        run: |
          make unit-tests

  integration-tests:
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - uses: actions/checkout@v2

      - name: Setup git vars
        id: vars
        run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          echo "##[set-output name=commit;]$(git rev-parse --short "$GITHUB_SHA")"

      - name: Create .env file
        run: |
          touch .env
          echo OWNER="ci-developmentseed" >> .env
          echo IDENTIFIER=${{ steps.vars.outputs.branch }}-${{ steps.vars.outputs.commit }} >> .env

      - name: Set up Python 3.8.6
        uses: actions/setup-python@v2
        with:
          python-version: 3.8.6

      - name: Setup up Node
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Install AWS CDK
        run: |
          npm install -g aws-cdk

      - name: Install Pipenv
        uses: dschep/install-pipenv-action@v1

      - name: Install dependencies
        run: |
          make install

      - name: Configure awscli
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Deploy hls-s2-downloader-serverless integration
        run: |
          make deploy-integration

      - name: Run integration tests
        run: |
          make integration-tests

      - name: Destroy hls-s2-downloader-serverless integration
        if: always()
        run: |
          make destroy-integration
